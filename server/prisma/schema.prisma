//***************************************************************************
// This is a Prisma schema file. This is where you can update how data is
// defined within your dataase (your "database schema"), and Prisma offers
// a convenient way to create, read, update, and delete records via server-
// side JavaScript code.
//
// Any time you update this file and want the changes to be reflected in
// your hosted database, you will need to run this command:
//     > npm run db:migrate
// This command will prompt you for a migration name and may display
// warnings caused by your migration (e.g. if you add a field to a table
// that is non-null and don't provide a default value). Migrations are the
// actual SQL code that runs to update your database.
//
// Sometimes you may want to create a migration without using the Prisma-
// default migration. For instance, you may want to write some custom SQL
// to run instead. In this case, you can run this command:
//     > npm run db:migrate:prep
// This command will generate a migration script, but you can edit it before
// actually running it against your database. To run it against your
// database, run the `npm run db:migrate` command again.
//
// I supplied you with a sample `Users` table. Feel free to edit that as
// you wish.
//***************************************************************************

// Learn more about Prisma schema files here: https://pris.ly/d/prisma-schema

// This is generated by Prisma. Don't mess with it unless you seriously know what you're doing.
generator client {
  provider = "prisma-client-js"
}

// This is generated by Prisma. Don't mess with it unless you seriously know what you're doing.
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// We wrote this. You can edit this however you like and run the Prisma migration command to
// update your database schema.
model Users {
  id         String   @id @default(uuid()) // Default provides value for you upon creation
                                           // Default value can optionally be overriden

  first_name String  // Value will be PostgreSQL type `text` with non-null assertion
  last_name  String  // Value will be PostgreSQL type `text` with non-null assertion
  occupation String? // Value will be either PostgreSQL type `text` or `null`
  age        Int?    // Value will be either PostgreSQL type `integer` or `null`

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt // There are some fancier decorators, too
}